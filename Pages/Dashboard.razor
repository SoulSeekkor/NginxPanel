@page "/"
@page "/dashboard"

@using static Services.ACME.ConfigFile;

@inject NavigationManager NavigationManager

@inject Services.ACME acme;
@inject Services.Nginx nginx;

<PageTitle>Nginx Panel - Dashboard</PageTitle>

<RadzenStack Orientation="Orientation.Vertical">
	<RadzenCard>
		<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start">
			@if (nginx.Installed)
			{

				<h3>Nginx Version: @nginx.Version</h3>
				<h5>Last config test results:</h5>
				@((MarkupString)nginx.LastTestResults)
			}
			else
			{
				<h5>
					Nginx is not installed, see <RadzenLink Icon="settings" Path="Settings" Text="Settings" /> screen for more information.
				</h5>
			}
		</RadzenStack>
	</RadzenCard>

	<RadzenCard Style="rz-mt-10">
		<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start">
			@if (acme.Installed)
			{
				<h3>ACME Version: @acme.Version</h3>
				<h5>
					Log File:&nbsp;
					@{
						string logFile = acme.AccountConf.GetConfValue(enuConfKey.LOG_FILE);

						if (String.IsNullOrWhiteSpace(logFile))
						{
							<span>None</span>
						}
						else
						{
							<span>@logFile</span>
						}
					}
				</h5>
				<h5>
					Auto-upgrade:&nbsp;
					@{
						string upgrade = acme.AccountConf.GetConfValue(enuConfKey.AUTO_UPGRADE);

						if (upgrade == "1")
						{
							<span>Yes</span>
						}
						else
						{
							<span>No</span>
						}
					}
					<br />
					<br />
					<RadzenTextArea Value="@acme.AccountConf.Config" Cols="85" Rows="15" />
				</h5>
			}
			else
			{
				<h5>
					ACME is not installed, see <RadzenLink Icon="settings" Path="Settings" Text="Settings" /> screen for more information.
				</h5>
			}
		</RadzenStack>
	</RadzenCard>
</RadzenStack>

@code {
	protected override void OnAfterRender(bool firstRender)
	{
		if (firstRender && !NavigationManager.Uri.EndsWith("dashboard"))
			NavigationManager.NavigateTo("dashboard");
	}

}