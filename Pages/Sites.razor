@page "/sites"

@inject Services.Nginx Nginx;

<PageTitle>Sites</PageTitle>

<h3>Sites</h3>

<RadzenButton Click=@(() => RefreshSites(true)) Text="Refresh" Icon="cached" ButtonStyle="ButtonStyle.Info" />
<br />
<br />

@foreach (Services.Nginx.ConfigFile conf in Nginx.SiteConfigs)
{
    <div class="wrap-collapsible">
        <input type="checkbox" id="collapsible_@conf.Name" class="toggle">
        <label for="collapsible_@conf.Name" class="lbl-toggle">@conf.Name</label>
        <div class="collapsible-content">
            <br />
            <RadzenCheckBox TValue="bool" Value=conf.Enabled Name="@conf.Name" Change="() => ToggleSite(conf)" />
            <RadzenLabel Text="Enabled" Component="@conf.Name" Style="margin-left: 8px; vertical-align: middle;" />
            <br />
            <br />
            <label for="contents_@conf.Name" style="font-size: 14px;">Configuration:</label>
            <br />
            <textarea id="contents_@conf.Name" name="contents_@conf.Name" value="@conf.FileContents" style="font-size: 12px; width: 800px; height: 400px; color: #cbd0da; background-color: #222733;" />
        </div>        
        <br />
        <hr />
    </div>
}

@code {
    [CascadingParameter]
    private MainLayout? layout { get; set; }

    protected override void OnInitialized()
    {
        RefreshSites(false);
    }

    private async void RefreshSites(bool notifyUser)
    {
        await Task.Run(() => Nginx.RefreshFiles());

        if (notifyUser)
        {
            layout?.ShowNotification(NotificationSeverity.Info, "Info", "Sites refreshed successfully!");
        }

        StateHasChanged();
    }

    private void ToggleSite(Services.Nginx.ConfigFile conf)
    {
        try
        {
            Nginx.ToggleEnabled(conf);

            if (conf.Enabled)
            {
                layout?.ShowNotification(NotificationSeverity.Success, "Success", $"Site <span style='color: blue; font-style: italic;'>{conf.Name}</span> enabled successfully!");
            }
            else
            {
                layout?.ShowNotification(NotificationSeverity.Success, "Success", $"Site <span style='color: red; font-style: italic;'>{conf.Name}</span> disabled successfully!");
            }
        }
        catch
        {
            layout?.ShowNotification(NotificationSeverity.Error, "Error", $"Error occurred while updating site '{conf.Name}'!");
        }
    }
}